name: Build Linux Binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Get dependencies
        run: go mod download

      - name: Build x86
        run: |
          GOOS=linux GOARCH=386 go build -v -o dbus-sms-forward-x86 .
          tar czf dbus-sms-forward-x86.tar.gz dbus-sms-forward-x86 README.md config.yml

      - name: Build x64
        run: |
          GOOS=linux GOARCH=amd64 go build -v -o dbus-sms-forward-x64 .
          tar czf dbus-sms-forward-x64.tar.gz dbus-sms-forward-x64 README.md config.yml

      - name: Build ARM
        run: |
          GOOS=linux GOARCH=arm go build -v -o dbus-sms-forward-arm .
          tar czf dbus-sms-forward-arm.tar.gz dbus-sms-forward-arm README.md config.yml

      - name: Build ARM64
        run: |
          GOOS=linux GOARCH=arm64 go build -v -o dbus-sms-forward-arm64 .
          tar czf dbus-sms-forward-arm64.tar.gz dbus-sms-forward-arm64 README.md config.yml

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dbus-sms-forward-binaries
          path: dbus-sms-forward-*.tar.gz
            
  # 如果是发布事件，将所有构建的二进制文件附加到Release
  upload-release:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Display structure of downloaded files
        run: ls -R
        
      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dbus-sms-forward-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 